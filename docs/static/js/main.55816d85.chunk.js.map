{"version":3,"sources":["redux/redux.js","components/counter/counter.jsx","components/counter/index.js","pages/home/index.js","pages/home/home.jsx","index.jsx"],"names":["createStore","reducer","initialState","state","callbacks","dispatch","action","forEach","item","getState","subscribe","callback","push","filter","count","incrementAction","amount","type","decrementAction","store","Counter","valueAmount","update","forceUpdate","reset","increment","decrement","handleChange","e","setState","parseInt","target","value","this","unsubscribe","className","data-testid","onClick","onChange","Component","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAsBeA,MAtBf,SAAqBC,EAASC,GAC5B,IAAIC,EAAQD,EACRE,EAAY,GAIVC,EAAW,SAACC,GAChBH,EAAQF,EAAQE,EAAOG,GACvBF,EAAUG,SAAQ,SAACC,GAAD,OAAUA,QAW9B,OAFAH,EAAS,IAEF,CAAEI,SAfQ,kBAAMN,GAeJE,WAAUK,UARX,SAACC,GAGjB,OAFAP,EAAUQ,KAAKD,GAER,kBAAMP,EAAUS,QAAO,SAACL,GAAD,OAAUA,IAASG,SCN/CT,EAAe,CAAEY,MAAO,GAkC9B,IAAMC,EAAkB,SAACC,GAAD,MAAa,CACnCC,KA7BgB,YA8BhBD,WAGIE,EAAkB,SAACF,GAAD,MAAa,CACnCC,KAjCgB,YAkChBD,WAWIG,EAAQ,IAAInB,GAtClB,WAAgD,IAA/BG,EAA8B,uDAAtBD,EAAcI,EAAQ,uCACrCQ,EAAUX,EAAVW,MACAG,EAAiBX,EAAjBW,KAAMD,EAAWV,EAAXU,OAEd,OAAQC,GACN,IAbc,YAcZ,MAAO,CAAEH,MAAOA,EAAQE,GAC1B,IAdc,YAeZ,MAAO,CAAEF,MAAOA,EAAQE,GAC1B,IAfU,QAgBR,MAAO,CAAEF,MAAO,GAClB,QACE,OAAOX,KA0B0BD,GC1DxBkB,E,4MDiEbjB,MAAQ,CACNkB,YAAa,G,EAGfC,OAAS,kBAAM,EAAKC,e,EAWpBC,MAAQ,kBAAML,EAAMd,SA9BK,CACzBY,KArCY,W,EAoEZQ,UAAY,kBAAMN,EAAMd,SAASU,EAAgB,EAAKZ,MAAMkB,e,EAE5DK,UAAY,kBAAMP,EAAMd,SAASa,EAAgB,EAAKf,MAAMkB,e,EAE5DM,aAAe,SAACC,GAAD,OACb,EAAKC,SAAS,CACZR,YAAaS,SAASF,EAAEG,OAAOC,U,kEAhBjCb,EAAMT,UAAUuB,KAAKX,U,6CAIDH,EAAMT,UAAUuB,KAAKX,OACzCY,K,+BAeA,IAAMpB,EAAQK,EAAMV,WAAWK,MAE/B,OACE,6BAASqB,UAAU,aACjB,wBAAIC,cAAY,QAAQD,UAAU,oBAC/BrB,GAEH,4BACEsB,cAAY,mBACZD,UAAU,oBACVE,QAASJ,KAAKR,WAHhB,KAOA,4BACEW,cAAY,eACZD,UAAU,oBACVE,QAASJ,KAAKT,OAHhB,SAOA,4BACEY,cAAY,mBACZD,UAAU,oBACVE,QAASJ,KAAKP,WAHhB,KAOA,6BACA,wBAAIU,cAAY,WAAWD,UAAU,uBAArC,UAGA,2BACEC,cAAY,QACZD,UAAU,mBACVlB,KAAK,OACLe,MAAOC,KAAK9B,MAAMkB,YAClBiB,SAAUL,KAAKN,oB,GAjEHY,aEhEPC,ECEF,kBAAM,kBAAC,EAAD,O,MCEnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.55816d85.chunk.js","sourcesContent":["function createStore(reducer, initialState) {\n  let state = initialState\n  let callbacks = []\n\n  const getState = () => state\n\n  const dispatch = (action) => {\n    state = reducer(state, action)\n    callbacks.forEach((item) => item())\n  }\n\n  const subscribe = (callback) => {\n    callbacks.push(callback)\n\n    return () => callbacks.filter((item) => item !== callback)\n  }\n\n  dispatch({})\n\n  return { getState, dispatch, subscribe }\n}\n\nexport default createStore\n","import React, { Component } from 'react'\n\nimport { createStore } from '../../redux'\n\n/*\n * State\n * */\n\nconst initialState = { count: 0 }\n\n/*\n * Constants\n * */\n\nconst INCREMENT = 'INCREMENT'\nconst DECREMENT = 'DECREMENT'\nconst RESET = 'RESET'\n\n/*\n * Reducer\n * */\n\nfunction reducer(state = initialState, action) {\n  const { count } = state\n  const { type, amount } = action\n\n  switch (type) {\n    case INCREMENT:\n      return { count: count + amount }\n    case DECREMENT:\n      return { count: count - amount }\n    case RESET:\n      return { count: 0 }\n    default:\n      return state\n  }\n}\n\n/*\n * Actions\n * */\n\nconst incrementAction = (amount) => ({\n  type: INCREMENT,\n  amount,\n})\n\nconst decrementAction = (amount) => ({\n  type: DECREMENT,\n  amount,\n})\n\nconst resetAction = () => ({\n  type: RESET,\n})\n\n/*\n * Create store\n * */\n\nconst store = new createStore(reducer, initialState)\n\n/*\n * Component\n * */\n\nclass Counter extends Component {\n  state = {\n    valueAmount: 0,\n  }\n\n  update = () => this.forceUpdate()\n\n  componentDidMount() {\n    store.subscribe(this.update)\n  }\n\n  componentWillUnmount() {\n    const unsubscribe = store.subscribe(this.update)\n    unsubscribe()\n  }\n\n  reset = () => store.dispatch(resetAction())\n\n  increment = () => store.dispatch(incrementAction(this.state.valueAmount))\n\n  decrement = () => store.dispatch(decrementAction(this.state.valueAmount))\n\n  handleChange = (e) =>\n    this.setState({\n      valueAmount: parseInt(e.target.value),\n    })\n\n  render() {\n    const count = store.getState().count\n\n    return (\n      <section className=\"container\">\n        <h1 data-testid=\"title\" className=\"container__title\">\n          {count}\n        </h1>\n        <button\n          data-testid=\"button-increment\"\n          className=\"container__button\"\n          onClick={this.increment}\n        >\n          +\n        </button>\n        <button\n          data-testid=\"button-reset\"\n          className=\"container__button\"\n          onClick={this.reset}\n        >\n          reset\n        </button>\n        <button\n          data-testid=\"button-decrement\"\n          className=\"container__button\"\n          onClick={this.decrement}\n        >\n          -\n        </button>\n        <br />\n        <h2 data-testid=\"subtitle\" className=\"container__subtitle\">\n          Amount\n        </h2>\n        <input\n          data-testid=\"input\"\n          className=\"container__input\"\n          type=\"text\"\n          value={this.state.valueAmount}\n          onChange={this.handleChange}\n        />\n      </section>\n    )\n  }\n}\n\nexport default Counter\n","import Counter from './counter'\n\nexport default Counter\n","import Home from './home'\n\nexport default Home\n","import React from 'react'\n\nimport { Counter } from '../../components'\n\nconst Home = () => <Counter />\n\nexport default Home\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Home } from './pages'\nimport './style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}